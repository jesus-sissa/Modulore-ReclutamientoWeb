@using Modulo_Reclutamiento_Web.Models.GeneralData
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model EmploymentData
<div class="page-header">
    <div class="page-title">
        <ol class="breadcrumb" style="float:left">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Prospectus",new{ pto = ViewBag.pto})"><i class="ti-arrow-left"></i> Regresar</a></li>
        </ol>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Reclutador</a></li>
            <li class="breadcrumb-item active">Prospectos</li>
            <li class="breadcrumb-item active">Procesos</li>
            <li class="breadcrumb-item active">Referencias Laborales</li>
        </ol>
    </div>
</div>

<div class="card">
    <div class="card-title">
        <h4>Referencia Laboral</h4>
    </div>
    <div class="card-body">
        <form method="post" asp-action="SaveEmploymentData" asp-controller="Prospectus" id="frmEmployment">
            <input type="hidden" asp-for="@Model.Id" value="@ViewBag.pto" />
            <div class="form-group">
                <label asp-for="@Model.CompanyName" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.CompanyName" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.Country" class="text-muted m-b-15 f-s-12"></label>
                <select id="country" class="form-control input-rounded" asp-for="@Model.Country" asp-items="@(new SelectList(Model.CountryOp, "Value","Text",Model.Country))"></select>
            </div>
            <div id="citiesofcountry" class="form-group">
                <label asp-for="@Model.City" class="text-muted m-b-15 f-s-12"></label>
                <select class="form-control input-rounded" asp-for="@Model.City" asp-items="@(new SelectList(Model.CityOp, "Value","Text",Model.City))"></select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Colony" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.Colony" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.PostalCode" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.PostalCode" class=" form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.Street" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.Street" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.StreetBetween1" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.StreetBetween1" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.StreetBetween2" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.StreetBetween2" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.Phone" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.Phone" class=" form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.ExternalNumber" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.ExternalNumber" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.InternalNumber" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.InternalNumber" class=" form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.StartDate" class="text-muted m-b-15 f-s-12"></label>
                <input type="date" asp-for="@Model.StartDate" autocomplete="off" value="@DateTime.Today.ToString("yyyy-MM-dd")" class="form-control input-rounded" />
            </div>
            <div class="form-group">
                <label asp-for="@Model.FinishDate" class="text-muted m-b-15 f-s-12"></label>
                <input type="date" asp-for="@Model.FinishDate" autocomplete="off" value="@DateTime.Today.ToString("yyyy-MM-dd")" class="form-control input-rounded" />
            </div>
            <div class="form-group">
                <label asp-for="@Model.SecurityCompany" class="text-muted m-b-15 f-s-12"></label>
                <select class="form-control input-rounded" asp-for="@Model.SecurityCompany" asp-items="@(new SelectList(Model.SecurityCompanyOp, "Value","Text",Model.SecurityCompany))"></select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Guns" class="text-muted m-b-15 f-s-12"></label>
                <select class="form-control input-rounded" asp-for="@Model.Guns" asp-items="@(new SelectList(Model.GunsOp, "Value","Text",Model.Guns))"></select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Position" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.Position" class=" validar form-control input-rounded" placeholder="">
            </div>
            <hr class="hr" />
            <div class="form-group">
                <label asp-for="@Model.BossName" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.BossName" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.BossPosition" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.BossPosition" class="form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.StartSalary" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.StartSalary" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.FinishSalary" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.FinishSalary" class=" validar form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <label asp-for="@Model.ReasonSeparation" class="text-muted m-b-15 f-s-12"></label>
                <select class="form-control input-rounded" asp-for="@Model.ReasonSeparation" asp-items="@(new SelectList(Model.ReasonSeparationOp, "Value","Text",Model.ReasonSeparation))"></select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.OtherMotive" class="text-muted m-b-15 f-s-12"></label>
                <input type="text" asp-for="@Model.OtherMotive" class="form-control input-rounded" placeholder="">
            </div>
            <div class="form-group">
                <input id="btn_Employment" type="button" class="btn btn-success input-rounded" value="Agregar" />
            </div>
        </form>

    </div>



    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th class="hidden">#</th>
                    <th>Compañia</th>
                    <th>Domicilio</th>
                    <th>Posicion</th>
                    <th>Compañia de Seguridad</th>
                    <th>Porta Armas</th>
                    <th>Jefe</th>
                    <th>Telefono</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.EmploymentLists.Count > 0)
                {
                    @foreach (var item in Model.EmploymentLists)
                    {
                        <tr>
                            <th scope="row" class="hidden">@item.Id</th>
                            <td>@item.CompanyName</td>
                            <td>@item.Domicile</td>
                            <td>@item.Position</td>
                            <td>@item.SecurityCompany</td>
                            <td>@item.Guns</td>
                            <td>@item.BossName</td>
                            <td>@item.Phone</td>
                            <td>
                                <a id="@item.Id" class="delempl btn btn-danger btn-rounded" style="color:#fff"><i class="ti-trash"></i> Eliminar </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <th scope="row" class="hidden"></th>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>
                        <td>No Data</td>

                    </tr>

                }



            </tbody>
        </table>
    </div>





</div>

@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function() {

            if ("@ViewBag.MSG" === "1") {
                swal("Datos de Trabajo Agregado!", "", "success");
            }
            if ("@ViewBag.MSG" === "0") {
                sweetAlert("Oops...", "No se pudo Agregar el los datos del Trabajo !!", "error");
            }


        });
        /**
         * validacion de campos
         */
         $(".validar").on("focus", function() {
            //console.log("event focus")
            if ($(this).val() === "" || $(this).val() === "0") {
                $(this).attr("style", "border-color:red")
            } else {
                if ($(this).val() !== "" || $(this).val() !== "0") {
                    $(this).attr("style", "border-color:green")
                }
                else {
                    $(this).removeAttr("style")
                }

            }
        }).on("change keyup paste", function() {
            //console.log("event change keyup paste")
            if ($(this).val() !== "") {
                $(this).removeAttr("style")
                $(this).attr("style", "border-color:green")
            }
        });

        /**
         * validacion de formulario
         */

        $("#btn_Employment").click(function() {
            event.preventDefault();

             if ($("#CompanyName").val() === "") {
                msgError("Nombre Compañia no puede ir vacio")
                $("#CompanyName").attr("style", "border-color:red")
                return false;
            }
             if ($("#Colony").val() === "") {
                msgError("Colonia no puede ir vacio")
                $("#Colony").attr("style", "border-color:red")
                return false;
            }
             
             if ($("#Street").val() === "") {
                msgError("Calle no puede ir vacio")
                $("#Street").attr("style", "border-color:red")
                return false;
            }
             if ($("#StreetBetween1").val() === "") {
                msgError("Entre calle no puede ir vacio")
                $("#StreetBetween1").attr("style", "border-color:red")
                return false;
            }
             if ($("#StreetBetween2").val() === "") {
                msgError("Entre calle no puede ir vacio")
                $("#StreetBetween2").attr("style", "border-color:red")
                return false;
            }
             if ($("#ExternalNumber").val() === "") {
                msgError("Numero Exterior no puede ir vacio")
                $("#PersonalData_FirstName").attr("style", "border-color:red")
                return false;
            }
             if ($("#Position").val() === "") {
                msgError("Puesto no puede ir vacio")
                $("#Position").attr("style", "border-color:red")
                return false;
            }
             if ($("#BossName").val() === "") {
                msgError("Nombre de Jefe no puede ir vacio")
                $("#BossName").attr("style", "border-color:red")
                return false;
            }
             if ($("#StartSalary").val() === "") {
                msgError("Sueldo Inicial Mensual no puede ir vacio")
                $("#StartSalary").attr("style", "border-color:red")
                return false;
            }
             if ($("#FinishSalary").val() === "") {
                msgError("Sueldo Fin Mensual no puede ir vacio")
                $("#FinishSalary").attr("style", "border-color:red")
                return false;
            }
            $("#frmEmployment").submit();
        });
        /**
         * cuando cambia el combo de pais carga los estados y ciudades en el combo posterior
         */
        $("#country").change(function() {
            var _country = $(this).val()
            console.log("pais:" + _country);
            UpdateCitiesOfCountry(_country);
        });

        $(".delempl").click(function() {
            var _id = $(this).attr("id");
            DeleteEmployment(_id);
        });

        function UpdateCitiesOfCountry(_country) {
            $("#citiesofcountry").empty();
            $.ajax({
                type: "POST",
                url: "@Url.Action("selectCities","Prospectus")",
                data: { country: _country },

                success: function(data) {
                    console.log(data)
                    $("#citiesofcountry").html(data);

                    //if (data) {
                    //    alert("Proceso Reiniciado")
                    //}
                    //else {
                    //    alert("Contraseña Incorrecta")
                    //}
                    //$("#ModalConfirmacionReset").modal("hide");

                },
                error: function(error) {
                    console.log(error.status)
                    if (error.status == 403) {
                        alert("No autorizado para hacer esta accion")
                    }
                    if (error.status == 404) {
                        alert("Accion No Disponible")
                    }
                    if (error.status == 500) {
                        alert("Error de Servidor")
                    }
                    //alert("Error al firmar")
                    //window.location.href ="/cajerosinteligentesQA/Home/Index"
                },
                complete: function(xhr, textStatus) {
                    console.log(xhr.status);
                }
            });
        }

        function DeleteEmployment(_id) {

            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteDataEmployment","Prospectus")",
                data: { id: _id },

                success: function(data) {
                    //console.log(data)

                    if (data) {
                        swal("Empleo removido!", "", "success");
                        sessionStorage.setItem("deleteClick", true);
                    }
                    else {
                        sweetAlert("Oops...", "No se pudo Quitar el Empleo !!", "error");
                        sessionStorage.setItem("deleteClick", false);
                    }
                    //$("#ModalConfirmacionReset").modal("hide");

                    setTimeout(function() {
                        window.location.reload();
                    }, 3000);



                },
                error: function(error) {
                    console.log(error.status)
                    if (error.status == 403) {
                        alert("No autorizado para hacer esta accion")
                    }
                    if (error.status == 404) {
                        alert("Accion No Disponible")
                    }
                    if (error.status == 500) {
                        alert("Error de Servidor")
                    }
                    //alert("Error al firmar")
                    //window.location.href ="/cajerosinteligentesQA/Home/Index"
                },
                complete: function(xhr, textStatus) {
                    console.log(xhr.status);
                }
            });
        }

    </script>
}